status = error
dest = err
name = UaaLog
<%
    timestamp_format = "%d{yyyy-MM-dd HH:mm:ss.SSS}"
    if_p("uaa.logging.format.timestamp", "uaa.logging_use_rfc3339") do
       raise ArgumentError.new("\"uaa.logging.format.timestamp\" and \"uaa.logging_use_rfc3339\" are incompatible configurations, please set only one of them. \"uaa.logging_use_rfc3339\" is deprecated so please use \"uaa.logging.format.timestamp\" if possible.")
    end
    if_p("uaa.logging_use_rfc3339") do
       warn("The \"uaa.logging_use_rfc3339\" field is deprecated, please use \"uaa.logging.format.timestamp\" instead.")
       logging_use_rfc3339_value = p("uaa.logging_use_rfc3339").to_s
       case logging_use_rfc3339_value
           when "true" then
                timestamp_format = "%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX}"
           when "false" then
                timestamp_format = "%d{yyyy-MM-dd HH:mm:ss.SSS}"
           else
               raise ArgumentError.new("Invalid value for uaa.logging_use_rfc3339.")
        end
    end
    if_p("uaa.logging.format.timestamp") do
        logging_format_timestamp_value = p("uaa.logging.format.timestamp")
        case logging_format_timestamp_value
        when "rfc3339" then
             timestamp_format = "%d{yyyy-MM-dd'T'HH:mm:ss.nnnnnn}{GMT+0}Z"
        when "rfc3339-legacy" then
             timestamp_format = "%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX}"
        when "deprecated" then
             timestamp_format = "%d{yyyy-MM-dd HH:mm:ss.SSS}"
        else
            raise ArgumentError.new("Invalid value for uaa.logging.format.timestamp.")
        end
    end
%>
property.log_directory = /var/vcap/sys/log/uaa
property.log_pattern=[<%= timestamp_format %>] uaa%X{context} - %pid [%t] .... %5p --- %c{1}: %replace{%m}{(?<=password=|client_secret=)([^&]*)}{<redacted>}%n

appender.uaaDefaultAppender.type = File
appender.uaaDefaultAppender.name = UaaDefaultAppender
appender.uaaDefaultAppender.fileName = ${log_directory}/uaa.log
appender.uaaDefaultAppender.layout.type = PatternLayout
appender.uaaDefaultAppender.layout.pattern = ${log_pattern}

appender.uaaAuditAppender.type = File
appender.uaaAuditAppender.name = UaaAuditAppender
appender.uaaAuditAppender.fileName = ${log_directory}/uaa_events.log
appender.uaaAuditAppender.layout.type = PatternLayout
appender.uaaAuditAppender.layout.pattern = ${log_pattern}

rootLogger.level = info
rootLogger.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender

logger.UAAAudit.name = UAA.Audit
logger.UAAAudit.level = info
logger.UAAAudit.additivity = true
logger.UAAAudit.appenderRef.auditEventLog.ref = UaaAuditAppender


# These loggers have a configurable level
logger.cfIdentity.name = org.cloudfoundry.identity
logger.cfIdentity.level = <%= p("uaa.logging_level") %>
logger.cfIdentity.additivity = false
logger.cfIdentity.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender

logger.springSecurity.name = org.springframework.security
logger.springSecurity.level = <%= p("uaa.logging_level") %>
logger.springSecurity.additivity = false
logger.springSecurity.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender

logger.springJdbc.name = org.springframework.jdbc
logger.springJdbc.level = <%= p("uaa.logging_level") %>
logger.springJdbc.additivity = false
logger.springJdbc.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender


# These loggers have a fixed level of "info"
logger.springWebStandardServletEnvironment.name = org.springframework.web.context.support.StandardServletEnvironment
logger.springWebStandardServletEnvironment.level = info
logger.springWebStandardServletEnvironment.additivity = false
logger.springWebStandardServletEnvironment.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender

logger.apacheHttpWire.name = org.apache.http.wire
logger.apacheHttpWire.level = info
logger.apacheHttpWire.additivity = false
logger.apacheHttpWire.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender

logger.springAopAspectJExpressionPointcut.name = org.springframework.aop.aspectj.AspectJExpressionPointcut
logger.springAopAspectJExpressionPointcut.level = info
logger.springAopAspectJExpressionPointcut.additivity = false
logger.springAopAspectJExpressionPointcut.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender

logger.springBeansDefaultListableBeanFactory.name = org.springframework.beans.factory.support.DefaultListableBeanFactory
logger.springBeansDefaultListableBeanFactory.level = info
logger.springBeansDefaultListableBeanFactory.additivity = false
logger.springBeansDefaultListableBeanFactory.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender

logger.springBeansDisposableBeanAdaptor.name = org.springframework.beans.factory.support.DisposableBeanAdapter
logger.springBeansDisposableBeanAdaptor.level = info
logger.springBeansDisposableBeanAdaptor.additivity = false
logger.springBeansDisposableBeanAdaptor.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender

logger.springSecurityLdapAuthenticationProvider.name = org.springframework.security.ldap.authentication.LdapAuthenticationProvider
logger.springSecurityLdapAuthenticationProvider.level = info
logger.springSecurityLdapAuthenticationProvider.additivity = false
logger.springSecurityLdapAuthenticationProvider.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender

logger.springSecurityFilterBasedUserSearch.name = org.springframework.security.ldap.search.FilterBasedLdapUserSearch
logger.springSecurityFilterBasedUserSearch.level = info
logger.springSecurityFilterBasedUserSearch.additivity = false
logger.springSecurityFilterBasedUserSearch.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender

logger.springWeb.name = org.springframework.web
logger.springWeb.level = info
logger.springWeb.additivity = false
logger.springWeb.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender
